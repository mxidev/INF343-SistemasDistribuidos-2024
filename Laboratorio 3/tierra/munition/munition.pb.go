// Code generated by protoc-gen-go. DO NOT EDIT.
// source: munition.proto

package munition

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MunitionRequest struct {
	IdGrupo              int32    `protobuf:"varint,1,opt,name=id_grupo,json=idGrupo,proto3" json:"id_grupo,omitempty"`
	CantidadAt           int32    `protobuf:"varint,2,opt,name=cantidad_at,json=cantidadAt,proto3" json:"cantidad_at,omitempty"`
	CantidadMp           int32    `protobuf:"varint,3,opt,name=cantidad_mp,json=cantidadMp,proto3" json:"cantidad_mp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MunitionRequest) Reset()         { *m = MunitionRequest{} }
func (m *MunitionRequest) String() string { return proto.CompactTextString(m) }
func (*MunitionRequest) ProtoMessage()    {}
func (*MunitionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1fdf7d50baaacbf, []int{0}
}

func (m *MunitionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MunitionRequest.Unmarshal(m, b)
}
func (m *MunitionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MunitionRequest.Marshal(b, m, deterministic)
}
func (m *MunitionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MunitionRequest.Merge(m, src)
}
func (m *MunitionRequest) XXX_Size() int {
	return xxx_messageInfo_MunitionRequest.Size(m)
}
func (m *MunitionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MunitionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MunitionRequest proto.InternalMessageInfo

func (m *MunitionRequest) GetIdGrupo() int32 {
	if m != nil {
		return m.IdGrupo
	}
	return 0
}

func (m *MunitionRequest) GetCantidadAt() int32 {
	if m != nil {
		return m.CantidadAt
	}
	return 0
}

func (m *MunitionRequest) GetCantidadMp() int32 {
	if m != nil {
		return m.CantidadMp
	}
	return 0
}

type MunitionResponse struct {
	Response             bool     `protobuf:"varint,1,opt,name=response,proto3" json:"response,omitempty"`
	DisponibleAt         int32    `protobuf:"varint,2,opt,name=disponible_at,json=disponibleAt,proto3" json:"disponible_at,omitempty"`
	DisponibleMp         int32    `protobuf:"varint,3,opt,name=disponible_mp,json=disponibleMp,proto3" json:"disponible_mp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MunitionResponse) Reset()         { *m = MunitionResponse{} }
func (m *MunitionResponse) String() string { return proto.CompactTextString(m) }
func (*MunitionResponse) ProtoMessage()    {}
func (*MunitionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1fdf7d50baaacbf, []int{1}
}

func (m *MunitionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MunitionResponse.Unmarshal(m, b)
}
func (m *MunitionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MunitionResponse.Marshal(b, m, deterministic)
}
func (m *MunitionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MunitionResponse.Merge(m, src)
}
func (m *MunitionResponse) XXX_Size() int {
	return xxx_messageInfo_MunitionResponse.Size(m)
}
func (m *MunitionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MunitionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MunitionResponse proto.InternalMessageInfo

func (m *MunitionResponse) GetResponse() bool {
	if m != nil {
		return m.Response
	}
	return false
}

func (m *MunitionResponse) GetDisponibleAt() int32 {
	if m != nil {
		return m.DisponibleAt
	}
	return 0
}

func (m *MunitionResponse) GetDisponibleMp() int32 {
	if m != nil {
		return m.DisponibleMp
	}
	return 0
}

func init() {
	proto.RegisterType((*MunitionRequest)(nil), "munition.MunitionRequest")
	proto.RegisterType((*MunitionResponse)(nil), "munition.MunitionResponse")
}

func init() {
	proto.RegisterFile("munition.proto", fileDescriptor_e1fdf7d50baaacbf)
}

var fileDescriptor_e1fdf7d50baaacbf = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0x2d, 0xcd, 0xcb,
	0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0xf2,
	0xb8, 0xf8, 0x7d, 0xa1, 0xec, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x49, 0x2e, 0x8e,
	0xcc, 0x94, 0xf8, 0xf4, 0xa2, 0xd2, 0x82, 0x7c, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0xf6,
	0xcc, 0x14, 0x77, 0x10, 0x57, 0x48, 0x9e, 0x8b, 0x3b, 0x39, 0x31, 0xaf, 0x24, 0x33, 0x25, 0x31,
	0x25, 0x3e, 0xb1, 0x44, 0x82, 0x09, 0x2c, 0xcb, 0x05, 0x13, 0x72, 0x2c, 0x41, 0x51, 0x90, 0x5b,
	0x20, 0xc1, 0x8c, 0xaa, 0xc0, 0xb7, 0x40, 0xa9, 0x82, 0x4b, 0x00, 0x61, 0x5f, 0x71, 0x41, 0x7e,
	0x5e, 0x71, 0xaa, 0x90, 0x14, 0x17, 0x47, 0x11, 0x94, 0x0d, 0xb6, 0x90, 0x23, 0x08, 0xce, 0x17,
	0x52, 0xe6, 0xe2, 0x4d, 0xc9, 0x04, 0xb1, 0x33, 0x93, 0x72, 0x52, 0x11, 0x76, 0xf2, 0x20, 0x04,
	0x1d, 0x4b, 0xd0, 0x14, 0xc1, 0xed, 0x45, 0x52, 0xe4, 0x5b, 0x60, 0x14, 0x8d, 0xf0, 0x69, 0x70,
	0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa, 0x90, 0x07, 0x17, 0x3f, 0xd4, 0xd3, 0x30, 0x19, 0x21, 0x49,
	0x3d, 0x78, 0x50, 0xa1, 0x85, 0x8b, 0x94, 0x14, 0x36, 0x29, 0x88, 0x33, 0x9d, 0xb8, 0xa2, 0xe0,
	0x41, 0x9a, 0xc4, 0x06, 0x0e, 0x63, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x67, 0x52, 0x48,
	0x6b, 0x75, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MunitionServiceClient is the client API for MunitionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MunitionServiceClient interface {
	RequestMunition(ctx context.Context, in *MunitionRequest, opts ...grpc.CallOption) (*MunitionResponse, error)
}

type munitionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMunitionServiceClient(cc grpc.ClientConnInterface) MunitionServiceClient {
	return &munitionServiceClient{cc}
}

func (c *munitionServiceClient) RequestMunition(ctx context.Context, in *MunitionRequest, opts ...grpc.CallOption) (*MunitionResponse, error) {
	out := new(MunitionResponse)
	err := c.cc.Invoke(ctx, "/munition.MunitionService/RequestMunition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MunitionServiceServer is the server API for MunitionService service.
type MunitionServiceServer interface {
	RequestMunition(context.Context, *MunitionRequest) (*MunitionResponse, error)
}

// UnimplementedMunitionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMunitionServiceServer struct {
}

func (*UnimplementedMunitionServiceServer) RequestMunition(ctx context.Context, req *MunitionRequest) (*MunitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestMunition not implemented")
}

func RegisterMunitionServiceServer(s *grpc.Server, srv MunitionServiceServer) {
	s.RegisterService(&_MunitionService_serviceDesc, srv)
}

func _MunitionService_RequestMunition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MunitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MunitionServiceServer).RequestMunition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/munition.MunitionService/RequestMunition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MunitionServiceServer).RequestMunition(ctx, req.(*MunitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MunitionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "munition.MunitionService",
	HandlerType: (*MunitionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestMunition",
			Handler:    _MunitionService_RequestMunition_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "munition.proto",
}
